<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title><%= meta?.title || 'Nairobi Escorts & Discreet Nairobi Elite Companions | Luxury & Privacy Guaranteed' %></title>
    <meta name="description" content="<%= meta?.description || 'Discreet Nairobi escort services offering luxury companionship and privacy for elite clients. Book your experience today.' %>">
    <meta name="keywords" content="escorts, local companions , female escorts, private meetups near me, discreet companionship Nairobi">
    <!-- Open Graph Tags -->
    <meta property="og:title" content="<%= meta?.title || 'Nairobi Escorts & Discreet Nairobi Elite Companions | Luxury & Privacy Guaranteed' %>" />
    <meta property="og:description" content="<%= meta?.description || 'Discreet Nairobi escort services offering luxury companionship and privacy for elite clients. Book your experience today.' %>" />
    <meta property="og:image" content="<%= meta?.image %>" />
    <meta property="og:url" content="<%= meta?.url %>" />
    <meta property="og:type" content="website" />

    <!-- Twitter Card Tags -->
    <meta name="twitter:title" content="<%= meta?.title %>" />
    <meta name="twitter:description" content="<%= meta?.description %>" />
    <meta name="twitter:image" content="<%= meta?.image %>" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="google-site-verification" content="bSCDBKCg6EBdoK1_tkSlek9pYZxgHJ2bsW1om91IYdk" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="canonical" href="<%= meta?.url %>" />
    <link rel="icon" href="/public/images/favicon.png" type="image/png">
    <link rel="stylesheet" href="https://fonts.cdnfonts.com/css/satoshi?display=swap">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"></noscript>
    <!-- ✅ Preload critical CSS -->
    <link href="/css/styles.css" rel='stylesheet'>
    <link rel="stylesheet" href="/css/header.css">
    <noscript><link rel="stylesheet" href="/css/header.css"></noscript>
    <link rel="stylesheet" href="/css/footer.css">
    <style>
       .escort-name {
            margin: 0;
            padding: 4px 0;
            font-size: 1rem;
            }html,body{
                display: flex;
                background-color: #f8f9fa;
                flex-direction: column;
                min-height:100vh;
            }main .listings .call:hover i {
                color: #fff;
            }.modal {
  display: none;
  align-items: center;
  justify-content: center;
  position: fixed;
  z-index: 9999999999;
  inset: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.5);
}

.modal-content {
  background-color: #fff;
  margin: 10% auto;
  padding: 20px;
  border-radius: 8px;
  width: 90%;
  max-width: 600px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.close-btn {
  float: right;
  font-size: 1.5rem;
  cursor: pointer;
  color: #333;
}
#openBookmarkModal {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 56px;
  height: 56px;
  background-color: #25D366; 
  color: #fff;
  border-radius: 50%;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 22px;
  cursor: pointer;
  transition: box-shadow 0.2s ease, transform 0.2s ease;
}

#openBookmarkModal:hover {
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.35);
  transform: scale(1.05);
}
@keyframes floatUp {
  0% { transform: translateY(40px); opacity: 0; }
  100% { transform: translateY(0); opacity: 1; }
}

#openBookmarkModal {
  animation: floatUp 0.4s ease-out;
 }

button[type="button"] {
  background-color: #009688;      
  color: white; 
  border: none;                  
  padding: 10px 16px;       
  margin-top: 10px;            
  font-size: 16px;        
  font-weight: bold;      
  border-radius: 6px;     
  cursor: pointer;        
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  transition: background-color 0.3s ease;
}

button[type="button"]:hover {
  background-color: #00796b;
  color: #fff;    
}#hero-section h1 {
  font-size: clamp(1.5rem, 5vw, 2.5rem);
  line-height: 1.2;
  font-weight: bold;
  margin: 0.5em 0;
}.call a {
  background-color: transparent;
  padding: 10px;
  color: #333;
  text-align: center
  }.call a:hover{
  color: #f8f8f8
  }#nearby:disabled {
    background-color: #ccc;
    cursor: not-allowed;
    pointer-events: none;
  }.fa-bookmark.active {
    color: #25D366;
  }.bookmark-btn {
  transition: color 0.3s ease;
}
  @media (max-width: 480px) {
  .modal-content {
    width: 95%;
    padding: 16px;
  }
}

    </style>
</head>
<body>
         <div class="container">
        <%- include('partials/header')  %>
        <!-- hero section -->
         <section id="hero-section">
            <h1>Verified Nairobi Escorts & Discreet Call Girls Near You</h1>
            <p>Welcome to Streak Companions — Nairobi’s trusted platform for verified escort services, discreet call girls, and premium companionship experiences.</p>
                <label for="gender">Filter By</label><br>
                <form id="filter-form" method="GET">
                    <select id="gender" name="gender" aria-label="Gender filter">
                        <option value="Select Gender" disabled selected hidden>Select Gender</option>
                        <option value="Female">Female</option>
                        <option value="Male">Male</option>
                        <option value="Transexual">Transexual</option>
                    </select>
                    <select id="city" name="city" aria-label="City filter">
                      <option value="Select City" disabled selected hidden>Select City</option>
                      <option value="Nairobi">Nairobi</option>
                      <!-- <option value="Mombasa">Mombasa</option> -->
                      <option value="Kiambu">Kiambu</option>
                      <!-- <option value="Nakuru">Nakuru</option>
                      <option value="Kisumu">Kisumu</option>
                      <option value="Eldoret">Eldoret</option>
                      <option value="Machakos">Machakos</option>
                      <option value="Laikipia">Laikipia</option>
                      <option value="Kajiado">Kajiado</option>
                      <option value="Kilifi">Kilifi</option>
                      <option value="Uasin Gishu">Uasin Gishu</option>
                      <option value="Kisii">Kisii</option>
                      <option value="Kakamega">Kakamega</option> -->
                    </select>
                    <select id="age" name="age" aria-label="Age filter">
                    <option value="" disabled selected hidden>Select Age Range</option>
                    <option value="18-24">18–24</option>
                    <option value="25-30">25–30</option>
                    <option value="31-40">31–40</option>
                    <option value="41-50">41–50</option>
                    <option value="51+">51+</option>
                  </select>
                    <button aria-label="filter button" id='submit' type="submit">Filter</button>
                </form>
                <button type="button" id="nearby" title="escorts near you">Nearby</button>
         </section>

         <section id="main" class="main">
            <div class="listings" id="listings" style="position: relative">
              <div id="loading-spinner" style="display: none; text-align: center; padding: 20px;">
                <i class="fa fa-spinner fa-spin fa-2x" style="color: #999;"></i>
                <p>Fetching nearby profiles…</p>
              </div>

        <% if (escorts.length === 0) { %>
            <p style="position: absolute; top:50%; left: 50%; transform: translateX(-50%)">
              Please check back soon!
            </p>
          <% } else { %>
            <% escorts.forEach((escort, index) => { %>
              <div class="card" style="display: flex;">
                <a href="/author/<%= escort.name %>" data-id="<%= escort.id %>" title="View profile of <%= escort.name %>, a <%= escort.city %> escort in <%= escort.areaLabel %>">
                  <% if (escort.isBoosted) { %>
                    <div class="badge <%= escort.boostType %>"><%= escort.boostType %></div>
                  <% } %>
                  <div class="image-wrapper">
                    <% if (index === 0) { %>
                      <!-- LCP image: load eagerly and set fetchpriority -->
                      <img
                        width="200"
                        height="200"
                        src="<%= escort.userImg %>"
                        fetchpriority="high"
                        alt="<%= escort.name.split(' ')[0] %>, a <%= escort.age %>-year-old <%= escort.gender %> escort in <%= escort.areaLabel %>, <%= escort.city %> offering <%= escort.boostType ? escort.boostType.toLowerCase() : 'private companionship' %>"
                      >
                    <% } else { %>
                      <!-- Other images: lazy load -->
                      <img
                        width="200"
                        height="200"
                        loading="lazy"
                        src="<%= escort.userImg %>"
                        alt="<%= escort.name.split(' ')[0] %>, a <%= escort.age %>-year-old <%= escort.gender %> escort in <%= escort.areaLabel %>, <%= escort.city %> offering <%= escort.boostType ? escort.boostType.toLowerCase() : 'private companionship' %>"
                      >
                    <% } %>
                  </div>
                </a>
                <div class="info">
                  <p class="escort-name"><%= escort.name.split(' ')[0] %></p>
                  <button 
                    class="bookmark-btn" 
                    aria-label="Bookmark profile" 
                    title="Bookmark this profile" 
                    data-id="<%= escort._id %>" 
                    data-name="<%= escort.name.split(' ')[0] %>" 
                    data-img="<%= escort.userImg %>" 
                    data-phone="<%= escort.phone %>" 
                    style="background: none; border: none; color: #444">
                    <i class="fa-solid fa-bookmark" aria-hidden="true"></i>
                  </button>
                </div>
                <hr>
                <p style="padding: 4px; color: #6c757d;">
                  Meet <%= escort.name.split(' ')[0] %>, a <%= escort.age %> years old <%= escort.gender %> Escort from <%= escort.city %>, <%= escort.areaLabel %> area.
                </p>
                <div class="call">
                  <a href="tel:<%= escort.phone %>" style="color: #25D366">
                    CALL <%= escort.name.split(' ')[0].toUpperCase() %> &nbsp;<i class="fa fa-phone"></i>
                  </a>
                </div>
              </div>
            <% }); %>
          <% } %>

        </div>     
        </section>
    </div>

    <div id="bookmarkModal" class="modal" role="dialog" aria-modal="true" aria-labelledby="bookmarkModalTitle">
  <div class="modal-content">
    <span class="close-btn">&times;</span>
    <h3 id="bookmarkModalTitle">Your Bookmarked Escorts</h3>
    <div id="bookmarkedList"></div>
  </div>
</div>
<i class="fa-solid fa-bookmark" id="openBookmarkModal" title="Saved Profiles"></span></i>

     <%- include('partials/footer')  %>
    <script defer src="https://cdn.jsdelivr.net/npm/slugify@1.6.6/slugify.min.js"></script>
    <script defer src="/js/script.js"></script>
    <script defer>
document.addEventListener('DOMContentLoaded', () => {

  
  let isProcessing = false;

  // Update bookmark icon colors based on localStorage
  // Update bookmark icons during idle time
document.getElementById('listings').addEventListener('keydown', (e) => {
  if ((e.key === 'Enter' || e.key === ' ') && e.target.classList.contains('bookmark-btn')) {
    e.preventDefault();
    e.target.click(); // Trigger the same logic as mouse click
  }
});

function updateBookmarkIcons() {
  requestIdleCallback(() => {
    const bookmarks = JSON.parse(localStorage.getItem('bookmarkedEscorts')) || [];
    document.querySelectorAll('.bookmark-btn').forEach(icon => {
      const iconId = icon.dataset.id;
      const isBookmarked = bookmarks.some(item => item.id === iconId);
      icon.style.color = isBookmarked ? '#25D366' : '#444';
    });
  });
}
  // Event delegation for bookmark toggling
  document.getElementById('listings').addEventListener('click', (e) => {
    if (!e.target.classList.contains('bookmark-btn') || isProcessing) return;
    isProcessing = true;

    const icon = e.target;
    const { id, name, img, phone } = icon.dataset;
    const bookmarks = JSON.parse(localStorage.getItem('bookmarkedEscorts')) || [];
    const isAlreadyBookmarked = bookmarks.some(item => item.id === id);

    if (!isAlreadyBookmarked) {
      bookmarks.push({ id, name, img, phone });
      localStorage.setItem('bookmarkedEscorts', JSON.stringify(bookmarks));
      icon.style.color = '#25D366';
    } else {
      const updated = bookmarks.filter(item => item.id !== id);
      localStorage.setItem('bookmarkedEscorts', JSON.stringify(updated));
      icon.style.color = '#444';
    }

    isProcessing = false;
  });

  // Load preferred filter options
  const preferredOption = JSON.parse(localStorage.getItem('prefferedOption')) || { city: 'Nairobi', gender: 'Female' };
  document.getElementById('gender').value = preferredOption.gender;
  document.getElementById('city').value = preferredOption.city;

  // Handle filter form submission
  document.querySelector('#filter-form').addEventListener('submit', (e) => {
    e.preventDefault();
    const gender = document.getElementById('gender').value;
    const city = document.getElementById('city').value;
    const age = document.getElementById('age').value || null;

    if (!gender || !city || gender === 'Select Gender' || city === 'Select City') return;
    localStorage.setItem('prefferedOption', JSON.stringify({ city, gender, age }));
    window.location.href = `/city/${encodeURIComponent(city)}?gender=${encodeURIComponent(gender)}&age=${encodeURIComponent(age)}`;
  });

  // Show bookmarks modal
  document.getElementById('openBookmarkModal').addEventListener('click', () => {
    const modal = document.getElementById('bookmarkModal');
    const list = document.getElementById('bookmarkedList');
    const bookmarks = JSON.parse(localStorage.getItem('bookmarkedEscorts')) || [];

    list.innerHTML = bookmarks.length === 0
      ? "<p>No bookmarks yet.</p>"
      : bookmarks.map(item => `
        <div style="margin-bottom: 12px; display: flex; align-items: center">
          <img loading="lazy" src="${item.img}" alt="${item.name}" width="60" style="border-radius:5px;">
          <a href="/author/${item.name}" class="copy-number-btn" data-name="${item.name.split(' ')[0]}" data-phone="${item.phone}" style="margin-left:8px; flex: 1; text-decoration: underline; cursor: pointer;">
            View ${item.name}'s profile.
          </a>
          <button class="remove-bookmark" data-id="${item.id}" style="background: none; border: none; color: #c0392b; cursor: pointer;">✕</button>
        </div>
      `).join('');

    // Remove bookmark handler
    list.querySelectorAll('.remove-bookmark').forEach(btn => {
      btn.addEventListener('click', () => {
        const id = btn.dataset.id;
        const updatedBookmarks = bookmarks.filter(item => item.id !== id);
        localStorage.setItem('bookmarkedEscorts', JSON.stringify(updatedBookmarks));
        btn.parentElement.remove();
        if (updatedBookmarks.length === 0) modal.style.display = 'none';
      });
    });

    modal.style.display = "flex";
  });

  // Close modal
  document.querySelector('.close-btn').onclick = () => {
    document.getElementById('bookmarkModal').style.display = "none";
  };

  window.onclick = (event) => {
    const modal = document.getElementById('bookmarkModal');
    if (event.target === modal) modal.style.display = "none";
  };

  // Nearby escorts
  let nearbyCooldown = false;
  function fetchNearbyEscorts() {
    if (nearbyCooldown) return;
    nearbyCooldown = true;
    setTimeout(() => nearbyCooldown = false, 5000);

    const nearbyBtn = document.querySelector('button[type="button"]');
    if (!navigator.geolocation) {
      alert("Geolocation is not supported by your browser.");
      return;
    }

    navigator.geolocation.getCurrentPosition(async (position) => {
      const lat = position.coords.latitude;
      const lng = position.coords.longitude;

      try {
        nearbyBtn.disabled = true;
        nearbyBtn.textContent = "Searching nearby...";
        const response = await fetchWithTimeout(`/nearby?lat=${lat}&lng=${lng}`);
        if (!response.ok) throw new Error(`Server error: ${response.status}`);

        const data = await response.json();
        if (data.success && Array.isArray(data.escorts)) {
          renderEscortCards(data.escorts);
	  observeCards(); // <-- move this here
          prioritizeLCPImage();
        } else {
          renderEscortCards([])
          prioritizeLCPImage();
        }
      } catch (err) {
        console.error("Error fetching nearby:", err);
        alert(err.message === "Request timed out"
          ? "The request took too long. Please try again."
          : "Something went wrong while searching nearby.");
      } finally {
        nearbyBtn.disabled = false;
        nearbyBtn.textContent = "Nearby";
      }
    }, (error) => {
      console.error("Location error:", error);
      alert("Unable to get your location.");
      nearbyBtn.disabled = false;
      nearbyBtn.textContent = "Nearby";
    });
  }

  function fetchWithTimeout(url, options, timeout = 10000) {
    return Promise.race([
      fetch(url, options),
      new Promise((_, reject) => setTimeout(() => reject(new Error("Request timed out")), timeout))
    ]);
  }

  document.querySelector('button[type="button"]').addEventListener('click', fetchNearbyEscorts);

  // Render escort cards with batched DOM write
function renderEscortCards(escorts) {
  const listings = document.getElementById("listings");
  listings.innerHTML = "";

  if (escorts.length === 0) {
    listings.innerHTML = `<p style="position: absolute; top:50%; left: 50%; transform: translateX(-50%)">No nearby escorts found. Try again later</p>`;
    return;
  }

  let html = "";
  escorts.forEach(escort => {
    const name = escort.name.split(' ')[0];
    html += `
      <div class="card" style="display: flex;">
        <a href="/author/${escort.name}" data-id="${escort._id}">
          ${escort.isBoosted ? `<div class="badge ${escort.boostType}">${escort.boostType}</div>` : ''}
          <div class="image-wrapper">
            <img width="200" height="200" data-src="${escort.userImg}" alt="${ escort.name.split(' ')[0] }, a ${ escort.age }-year-old ${ escort.gender } escort in ${ escort.areaLabel }, ${ escort.city } offering private companionship }">
          </div>
        </a>
        <div class="info">
          <p class="escort-name">${name}</p>
          <span aria-label="Bookmark profile">
           <i title="Bookmark this profile" class="fa-solid fa-bookmark bookmark-btn"
            role="button"
            tabindex="0"
            aria-label="Bookmark profile of ${name}"
            data-id="${escort._id}"
            data-name="${name}"
            data-img="${escort.userImg}"
            data-phone="${escort.phone}"
            style="color: #444" aria-hidden="false"></i>
          </span>
        </div>
        <hr>
        <p style="padding: 4px;color: #6c757d;">
          Meet ${name}, a ${escort.age} years old ${escort.gender} Escort from ${escort.city}, ${escort.areaLabel} area.
        </p>
        <div class="call">
          <a href="tel:${escort.phone}" style="color: #25D366">
            CALL ${name.toUpperCase()} &nbsp;<i class="fa fa-phone"></i>
          </a>
        </div>
      </div>
    `;
  });

  listings.innerHTML = html;
  updateBookmarkIcons(); // Now runs during idle time
  }

  // Initial bookmark icon update
  updateBookmarkIcons();
});

function prioritizeLCPImage() {
  const cards = document.querySelectorAll('.card img');

  for (let i = 0; i < cards.length; i++) {
    const img = cards[i];
    const rect = img.getBoundingClientRect();
    const inView = rect.top >= 0 && rect.top < window.innerHeight;

    if (inView) {
      // If lazy-loaded, swap to eager loading
      if (img.dataset.src && !img.src) {
        img.src = img.dataset.src;
        img.removeAttribute('data-src');
      }

      // Set fetchpriority to high
      img.setAttribute('fetchpriority', 'high');

      // Optional: preload in <head>
      const preload = document.createElement('link');
      preload.rel = 'preload';
      preload.as = 'image';
      preload.href = img.src;
      preload.setAttribute('fetchpriority', 'high');
      document.head.appendChild(preload);

      break; // Only optimize the first visible image
    }
  }
}

observeCards();
// Animate cards on entry using Intersection Observer
function observeCards() {
  const observer = new IntersectionObserver((entries, obs) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');

        // Optional: Lazy-load image manually
        const img = entry.target.querySelector('img[data-src]');
        if (img && !img.src) {
          img.src = img.dataset.src;
        }

        obs.unobserve(entry.target);
      }
    });
  }, {
    threshold: 0.2 // Trigger when 20% of card is visible
  });

  document.querySelectorAll('.card').forEach(card => {
    observer.observe(card);
  });
}
</script>
 <script defer type="application/ld+json">
  <%- JSON.stringify({
    "@context": "https://schema.org",
    "@type": "LocalBusiness",
    "name": meta.title,
    "description": meta.description,
    "image": meta.image || "https://raha.com/default-preview.jpg",
    "address": {
      "@type": "PostalAddress",
      "addressLocality": "Nairobi",
      "addressRegion": "Nairobi County",
      "addressCountry": "KE"
    },
      "openingHours": "Mo-Su 00:00-23:59",
      "priceRange": "Ksh",
    "url": meta.url
  }) %>
</script>
</body>
</html>


